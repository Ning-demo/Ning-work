枚举
使用枚举我们可以定义一些带名字的常量。 使用枚举可以清晰地表达意图或创建一组有区别的用例。
  TypeScript支持数字的和基于字符串的枚举。

1.数字枚举
在定义的时候可以使用计算值和常量
如果一个值使用了计算值和常量，那么就要给每一个进行都赋值
1.1指定索引
每次手动添加索引的时候,下面数据如果不是手动添加的索引,将会以递增的方式,把索引展示出来
1.2计算量和常量
每个枚举成员都带有一个值，它可以是 常量或 计算出来的。
1.3反向映射 ：分别对对象和值进行储存
只有数字枚举可以使用，字符枚举不能使用
2.字符串枚举 
在定义的时候都是字符串
且不能使用计算量和常量
含字符串值成员的枚举中不允许使用计算值。

3.异构枚举
枚举的类型中既有字符串又有数值
4.枚举成员类型  
枚举成员  可以把符合条件的成员作为枚举值来进行使用
5.联合枚举类型
当枚举值符合条件的时候，这个成员可以看做是包含所有成员的联合类型
6.运行时枚举
枚举在编译后的值实际是一个对象
7.const enum用法
我们可以通过const修饰符来强调当前枚举类型，const枚举只能使用使用常量枚举表达式，而且会在编译阶段被删除。






